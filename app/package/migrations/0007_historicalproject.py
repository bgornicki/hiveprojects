# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2020-09-25 15:58
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_extensions.db.fields
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('package', '0006_auto_20180316_1308'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalProject',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Name')),
                ('url', models.URLField(blank=True, db_index=True, null=True, verbose_name='Project URL')),
                ('status', models.CharField(choices=[('', '----'), ('UNKNOWN', 'Unknown'), ('LIVE_RELEASED', 'Live/Released'), ('WORKINGPROTOTYPE_BETA', 'Working Prototype/Beta'), ('DEMO_ALPHA', 'Demo/Alpha'), ('CONCEPT', 'Concept'), ('ABANDONED_BROKEN', 'Abandoned/Broken'), ('OUTOFDATE_RETIRED', 'Out of Date/Retired')], default='', help_text='<ul><li><strong>Live/Released</strong> - Project is ready to use</li><li><strong>Working Prototype/Beta</strong> - Project is working however, it still can contain some bugs</li><li><strong>Demo/Alpha</strong> - Project can be used by people which are not afraid of bugs and has very high pain threshold</li><li><strong>Concept</strong> - Project which pretends to be a working product</li><li><strong>Abandoned/Broken</strong> - Project is no longer available or it is completely broken</li><li><strong>Out of Date/Retired</strong> - Project is no longer needed, because of changes in ecosystem</li></ul>', max_length=100, verbose_name='Status')),
                ('description', models.TextField(blank=True, default='', null=True, verbose_name='Description')),
                ('announcement_post', models.URLField(blank=True, help_text='Link to place, where project was announced for the first time', null=True, verbose_name='Announcement Post URL')),
                ('contact_url', models.URLField(blank=True, default=None, null=True, verbose_name='Contact URL')),
                ('slug', models.SlugField(help_text="Enter a valid 'slug' consisting of letters, numbers, underscores or hyphens. Values will be converted to lowercase.", verbose_name='Slug')),
                ('repo_description', models.TextField(blank=True, verbose_name='Repo Description')),
                ('repo_url', models.URLField(blank=True, db_index=True, help_text='Enter your project repo hosting URL here. Example: https://github.com/opencomparison/opencomparison', null=True, verbose_name='Repository URL')),
                ('repo_watchers', models.IntegerField(default=0, verbose_name='Stars')),
                ('repo_forks', models.IntegerField(default=0, verbose_name='repo forks')),
                ('pypi_url', models.CharField(blank=True, default='', help_text='<strong>Leave this blank if this package does not have a PyPI release.</strong> What PyPI uses to index your package. Example: django-uni-form', max_length=255, verbose_name='PyPI slug')),
                ('pypi_downloads', models.IntegerField(default=0, verbose_name='Pypi downloads')),
                ('participants', models.TextField(blank=True, help_text='List of collaborats/participants on the project', verbose_name='Participants')),
                ('is_awaiting_approval', models.BooleanField(default=False, null=None)),
                ('is_published', models.BooleanField(default=False, null=None)),
                ('publication_time', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Publication time')),
                ('approval_request_datetime', models.DateTimeField(blank=True, default=None, null=True)),
                ('last_fetched', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('documentation_url', models.URLField(blank=True, default='', null=True, verbose_name='Documentation URL')),
                ('commit_list', models.TextField(blank=True, verbose_name='Commit List')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('category', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='package.Category', verbose_name='Category')),
                ('draft_added_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('main_img', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='package.ProjectImage')),
            ],
            options={
                'verbose_name': 'historical project',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
